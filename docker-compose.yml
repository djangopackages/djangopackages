services:
  django:
    build:
      context: .
      dockerfile: ./dockerfiles/django/Dockerfile-dev
    hostname: django
    init: true
    command: /start-dev.sh
    depends_on:
      - postgres
      - redis
    env_file:
      - .env.local
    expose:
      - 8000
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - djpkg_static_dev:/data/static
      - djpkg_media_dev:/data/media

  celery:
    build:
      context: .
      dockerfile: ./dockerfiles/django/Dockerfile-dev
    command: ["celery", "-A", "settings", "worker", "--concurrency=10", "--loglevel=debug"]
    depends_on:
      - postgres
      - redis
    env_file:
      - .env.local
    init: true
    profiles:
      - celery
    volumes:
      - .:/app
      - djpkg_static_dev:/data/static
      - djpkg_media_dev:/data/media

  celery-beat:
    build:
      context: .
      dockerfile: ./dockerfiles/django/Dockerfile-dev
    command: ["celery", "-A", "settings", "beat", "--loglevel=debug"]
    depends_on:
      - postgres
      - redis
    env_file:
      - .env.local
    init: true
    profiles:
      - celery
    volumes:
      - .:/app
      - djpkg_static_dev:/data/static
      - djpkg_media_dev:/data/media

  postgres:
    build: ./dockerfiles/postgres
    hostname: postgres
    init: true
    env_file:
      - .env.local
    expose:
      - 5432
    volumes:
      - djpkg_postgres_data_dev:/var/lib/postgresql/data
      - djpkg_postgres_backup_dev:/backups
    healthcheck:
      test: [
          "CMD",
          "/usr/local/bin/healthcheck_pg.sh",
      ]
      interval: 3s
      timeout: 3s
      retries: 30

  redis:
    build: ./dockerfiles/redis
    hostname: redis
    expose:
      - 6379
    init: true
    healthcheck:
      test: [
          "CMD",
          "redis-cli",
          "ping"
      ]
      interval: 3s
      timeout: 3s
      retries: 30

  docs:
    build:
      context: .
      dockerfile: ./dockerfiles/django/Dockerfile-dev
    command: sh -c "mkdocs serve -f docs/mkdocs.yml --dev-addr 0.0.0.0:4000"
    entrypoint: ""
    environment:
      FAST_MODE: "true"
      LIVE_RELOAD_SUPPORT: "true"
    init: true
    profiles:
      - docs
    ports:
      - "4000:4000"
    volumes:
      - .:/app

volumes:
  djpkg_postgres_data_dev: {}
  djpkg_postgres_backup_dev: {}
  djpkg_media_dev: {}
  djpkg_static_dev: {}
