services:
  django-a:
    init: true
    build:
      context: .
      dockerfile: ./dockerfiles/django/Dockerfile
    user: django
    depends_on:
      - redis
    volumes:
      - static:/data/static
      - media:/data/media
    command: /start.sh
    restart: always
    env_file: .env
    logging:
      driver: "json-file"
      options:
        max-size: "400m"
        max-file: "5"
        # compress: "true"

  django-b:
    init: true
    build:
      context: .
      dockerfile: ./dockerfiles/django/Dockerfile
    user: django
    depends_on:
      - redis
    volumes:
      - static:/data/static
      - media:/data/media
    command: /start.sh
    restart: always
    env_file: .env
    logging:
      driver: "json-file"
      options:
        max-size: "400m"
        max-file: "5"
        # compress: "true"

  django-q:
    init: true
    build:
      context: .
      dockerfile: ./dockerfiles/django/Dockerfile
    user: django
    depends_on:
      - redis
    volumes:
      - static:/data/static
      - media:/data/media
    command: python manage.py qcluster
    restart: always
    env_file: .env
    logging:
      driver: "json-file"
      options:
        max-size: "400m"
        max-file: "5"

  utility:
    init: true
    build:
      context: .
      dockerfile: ./dockerfiles/django/Dockerfile
    user: django
    depends_on:
      - redis
    profiles:
      - utility
    volumes:
      - static:/data/static
      - media:/data/media
    env_file: .env
    logging:
      driver: "json-file"
      options:
        max-size: "400m"
        max-file: "5"

  caddy:
    init: true
    depends_on:
      - django-a
      - django-b
    env_file: .env
    command: caddy run --adapter caddyfile --config /etc/caddy/Caddyfile
    restart: always
    image: caddy:2.4.3
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./dockerfiles/caddy/Caddyfile:/etc/caddy/Caddyfile  # configuration
      - /data/djangopackages/caddy/config:/config  # configuration autosaves
      - /data/djangopackages/caddy/data:/data  # saving certificates
      - media:/data/media
      - static:/data/static
    logging:
      driver: "json-file"
      options:
        max-size: "600m"
        max-file: "5"
        # compress: "true"

  redis:
    init: true
    build: ./dockerfiles/redis
    expose:
      - 6379
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        # compress: "true"

volumes:
  static: {}
  media: {}
